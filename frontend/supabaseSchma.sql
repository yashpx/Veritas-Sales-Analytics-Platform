CREATE TABLE public.call_logs (
  call_id serial NOT NULL,
  sales_rep_id integer NOT NULL,
  customer_id integer NOT NULL,
  call_date timestamp without time zone NOT NULL,
  duration_minutes integer NOT NULL,
  call_outcome character varying(50) NULL,
  notes text NULL,
  "Sentiment Result" text NULL,
  transcription text NULL,
  CONSTRAINT call_logs_pkey PRIMARY KEY (call_id),
  CONSTRAINT call_logs_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES customers(customer_id),
  CONSTRAINT call_logs_sales_rep_id_fkey FOREIGN KEY (sales_rep_id) REFERENCES sales_reps(sales_rep_id),
  CONSTRAINT call_logs_call_outcome_check CHECK (((call_outcome)::text = ANY ((ARRAY['In-progress'::character varying, 'Closed'::character varying, 'Fail'::character varying])::text[]))),
  CONSTRAINT call_logs_duration_minutes_check CHECK ((duration_minutes > 0))
) TABLESPACE pg_default;

CREATE TABLE public.call_transcription (
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  call_id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  call_transcription text NULL DEFAULT ''::text,
  CONSTRAINT Call_transcription_pkey PRIMARY KEY (id),
  CONSTRAINT Call_transcription_call_id_key UNIQUE (call_id),
  CONSTRAINT call_transcription_call_id_fkey FOREIGN KEY (call_id) REFERENCES call_logs(call_id)
) TABLESPACE pg_default;

CREATE TABLE public.customers (
  customer_id serial NOT NULL,
  customer_first_name character varying(100) NULL,
  customer_last_name character varying(100) NULL,
  "Customer Email" text NULL,
  "Company" text NULL,
  "Title" text NULL,
  phone number bigint NULL,
  organization_id uuid NULL,
  CONSTRAINT customers_pkey PRIMARY KEY (customer_id),
  CONSTRAINT customers_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES organizations(organization_id)
) TABLESPACE pg_default;

CREATE TABLE public.leaderboard (
  sales_rep_id integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  sales_rep_name character varying NOT NULL,
  month date NULL,
  total_calls integer NULL,
  successful_calls integer NULL,
  revenue_generated numeric NULL,
  avg_call_duration integer NULL,
  customer_satisfaction numeric NULL,
  new_customers_acquired integer NULL,
  conversion_rate numeric NULL,
  upsell_success_rate numeric NULL,
  CONSTRAINT leaderboard_pkey PRIMARY KEY (sales_rep_id)
) TABLESPACE pg_default;

CREATE TABLE public.organizations (
  organization_id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  created_at timestamp with time zone NULL DEFAULT now(),
  updated_at timestamp with time zone NULL DEFAULT now(),
  CONSTRAINT organizations_pkey PRIMARY KEY (organization_id)
) TABLESPACE pg_default;

CREATE TABLE public.products (
  product_id serial NOT NULL,
  product_name character varying(200) NOT NULL,
  subscription_type character varying(50) NULL,
  avg_price_per_unit numeric(10,2) NULL,
  CONSTRAINT products_pkey PRIMARY KEY (product_id)
) TABLESPACE pg_default;

CREATE TABLE public.profiles (
  id uuid NOT NULL,
  name text NULL,
  email text NULL,
  phone_number text NULL,
  email_notification boolean NULL DEFAULT false,
  sound_notification boolean NULL DEFAULT true,
  created_at timestamp with time zone NULL DEFAULT now(),
  updated_at timestamp with time zone NULL DEFAULT now(),
  CONSTRAINT profiles_pkey PRIMARY KEY (id)
) TABLESPACE pg_default;

CREATE TABLE public.sales_data (
  sale_id serial NOT NULL,
  sales_rep_id integer NOT NULL,
  sales_rep_first_name character varying(100) NULL,
  sales_rep_last_name character varying(100) NULL,
  sale_date date NOT NULL,
  sale_amount numeric(10,2) NOT NULL,
  product_id integer NOT NULL,
  product_name character varying(200) NOT NULL,
  quantity_sold integer NOT NULL,
  payment_method character varying(50) NULL,
  customer_id integer NOT NULL,
  customer_first_name character varying(100) NULL,
  customer_last_name character varying(100) NULL,
  CONSTRAINT sales_data_pkey PRIMARY KEY (sale_id),
  CONSTRAINT sales_data_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES customers(customer_id),
  CONSTRAINT sales_data_product_id_fkey FOREIGN KEY (product_id) REFERENCES products(product_id),
  CONSTRAINT sales_data_sales_rep_id_fkey FOREIGN KEY (sales_rep_id) REFERENCES sales_reps(sales_rep_id),
  CONSTRAINT sales_data_payment_method_check CHECK (((payment_method)::text = ANY ((ARRAY['Online Payment'::character varying, 'Credit Card'::character varying])::text[])))
) TABLESPACE pg_default;

CREATE TABLE public.sales_kpi (
  kpi_id serial NOT NULL,
  sales_rep_id integer NOT NULL,
  sales_rep_first_name character varying(100) NULL,
  sales_rep_last_name character varying(100) NULL,
  month date NOT NULL,
  target_transactions integer NOT NULL,
  target_sales_amount numeric(10,2) NOT NULL,
  CONSTRAINT sales_kpi_pkey PRIMARY KEY (kpi_id),
  CONSTRAINT sales_kpi_sales_rep_id_fkey FOREIGN KEY (sales_rep_id) REFERENCES sales_reps(sales_rep_id)
) TABLESPACE pg_default;

CREATE TABLE public.sales_reps (
  sales_rep_id serial NOT NULL,
  sales_rep_first_name character varying(100) NULL,
  sales_rep_last_name character varying(100) NULL,
  "Phone Number" bigint NULL,
  "Email" text NULL,
  user_id UUID NULL REFERENCES auth.users(id),
  CONSTRAINT sales_reps_pkey PRIMARY KEY (sales_rep_id)
) TABLESPACE pg_default;

CREATE TABLE public.top_selling_products (
  product_id serial NOT NULL,
  product_name character varying(100) NULL,
  month date NULL,
  total_units_sold integer NULL,
  avg_price_per_unit numeric(10,2) NULL,
  total_revenue numeric(15,2) NULL,
  churn_rate numeric(5,2) NULL,
  rating numeric(3,2) NULL,
  customer_feedback_count integer NULL,
  subscription_type character varying(50) NULL,
  retention_rate numeric(5,2) NULL,
  CONSTRAINT top_selling_products_pkey PRIMARY KEY (product_id)
) TABLESPACE pg_default;

CREATE TABLE public.user_auth (
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  email character varying NULL,
  "Password" text NOT NULL,
  "Full Name" character varying NULL,
  "Role" character varying NULL,
  "Is active" boolean NULL DEFAULT true,
  CONSTRAINT User_Authentication_pkey PRIMARY KEY (id),
  CONSTRAINT user_auth_email_key UNIQUE (email),
  CONSTRAINT user_auth_role_check CHECK ("Role" = ANY (ARRAY['manager'::character varying, 'sales_rep'::character varying]))
) TABLESPACE pg_default;

CREATE TABLE public.user_profiles (
  user_id uuid NOT NULL,
  role text NOT NULL,
  created_at timestamp with time zone NULL DEFAULT now(),
  updated_at timestamp with time zone NULL DEFAULT now(),
  CONSTRAINT user_profiles_pkey PRIMARY KEY (user_id),
  CONSTRAINT user_profiles_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES organizations(organization_id),
  CONSTRAINT user_profiles_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT user_profiles_role_check1 CHECK ((role = ANY (ARRAY['manager'::text, 'sales_rep'::text])))
) TABLESPACE pg_default;